CREATE DATABASE IF NOT EXISTS SAY_N_FIT;
USE SAY_N_FIT;

CREATE TABLE IF NOT EXISTS USUARIO(
alias VARCHAR(30) PRIMARY KEY NOT NULL,
nombre VARCHAR(60) NOT NULL,
peso FLOAT NOT NULL,
nacimiento DATE NOT NULL,
clave VARCHAR(300) NOT NULL
);

CREATE TABLE IF NOT EXISTS GRUPO(
clave VARCHAR(20) PRIMARY KEY NOT NULL,
nombre VARCHAR(30) NOT NULL,
lider VARCHAR(30) NOT NULL,
CONSTRAINT lid_fk FOREIGN KEY (lider) REFERENCES USUARIO(alias) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS PERTENECE(
usuario VARCHAR(30) NOT NULL,
grupo VARCHAR(30) NOT NULL,
CONSTRAINT per_pk PRIMARY KEY (usuario, grupo),
CONSTRAINT usu_fk FOREIGN KEY (usuario) REFERENCES USUARIO(alias) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT gru_fk FOREIGN KEY (grupo) REFERENCES GRUPO(clave) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS RUTINA(
codigo INT NOT NULL,
usuario VARCHAR(30) NOT NULL,
nombre VARCHAR(30) NOT NULL,
dias VARCHAR(15) NOT NULL,
CONSTRAINT rut_pk PRIMARY KEY (codigo, usuario),
CONSTRAINT usu_fk_rut FOREIGN KEY (usuario) REFERENCES USUARIO(alias) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS EJERCICIO(
nombre VARCHAR(40) PRIMARY KEY NOT NULL,
descripcion VARCHAR(200) NOT NULL,
nivel ENUM('principiante', 'intermedio', 'avanzado') NOT NULL,
musculos VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS ALMACENA(
codigo_rutina INT NOT NULL,
usuario VARCHAR(30) NOT NULL,
ejercicio VARCHAR(40) NOT NULL,
CONSTRAINT alm_pk PRIMARY KEY (codigo_rutina, usuario, ejercicio),
CONSTRAINT rut_fk FOREIGN KEY (codigo_rutina, usuario) REFERENCES RUTINA(codigo, usuario) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT nom_fk FOREIGN KEY (ejercicio) REFERENCES EJERCICIO(nombre) ON UPDATE CASCADE ON DELETE CASCADE
);